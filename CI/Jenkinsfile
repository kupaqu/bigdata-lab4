pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('dockerhub-creds')
	    DB_CREDS=credentials('db_creds')
        ANSIBLE_CREDS=credentials('ansible-creds')
        LC_ALL= "C.UTF-8"
        // LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {
        stage('Clone github repository') {
            steps {
                cleanWs()
		sh 'git config --global http.postBuffer 157286400'
                sh 'git clone -b main https://github.com/kupaqu/bigdata-lab4.git'
				}
			}
	    stage('Decrypt secrets.yml') {
            steps {
                sh 'cd bigdata-lab4 && echo $ANSIBLE_CREDS_PSW > pw.txt'
                sh 'cd bigdata-lab4 && ansible-vault decrypt secrets.yml --vault-password-file pw.txt -v'
                }
            }

        stage('Checkout repo dir') {
            steps {
                sh 'cd bigdata-lab4 && dir'
				}
			}

        stage('Login'){
            steps{
                //withCredentials([usernamePassword(credentialsId: 'mlops-lab-2', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]){
                //sh 'echo $DOCKER_REGISTRY_PWD | docker login -u $DOCKER_REGISTRY_USER --password-stdin'}
                //sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
                sh 'docker login -u $DOCKERHUB_CREDS_USR -p $DOCKERHUB_CREDS_PSW'
                }
            }

        stage('Create and run docker container') {
            steps {
                script {
                    try {
                        sh 'cd bigdata-lab4 && docker compose build'
                        }

                    finally {
                    sh '''
                        cd bigdata-lab4
                        docker compose up -d
                        '''
                        }
				    }
                }
            }

        // use for multi containers:
        //docker exec %containerId% cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m
        //use for single container (with auth):
        //docker run --name mlops-lab-2_web_1 cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m

        /* stage('Checkout container logs') {
            steps {
                dir("mlops-lab-2") {
                        sh '''
                            docker-compose up -d
                            for /f %%i in ('docker ps -qf "name=^mlops-lab-2-web-1"') do set containerId=%%i
                            echo %containerId%
                            IF "%containerId%" == "" (
                                echo "No container running"
                            )
                            ELSE (
                                docker logs --tail 1000 -f %containerId%
                                )
                        '''
                    }
            }
        } */

        stage('Checkout coverage report'){
            steps{
                dir("bigdata-lab4"){
                    sh '''
                    docker compose logs -t --tail 10
                    '''
                }
            }
        }

        stage('Push'){
            steps{
                sh 'docker push kupaqu/bigdata-lab4:latest'
            }
        }
	}

    post {
        always {
            sh 'docker logout'
        }
    }
}
